<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.MessageMapper">
    <sql id="insertColumns">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>
    <sql id="selectColumns">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>
    <select id="selectConversationList" resultType="Message">
        select <include refid="selectColumns"></include> from message
        where id in (
            select max(id) from message
            where from_id != 1
            and status != 2
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        )
        order by create_time desc
        limit #{offset}, #{limit}
    </select>
    <select id="selectConversationRows" resultType="int">
        select count(1) from
        (
            select id from message
            where from_id != 1
            and status != 2
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        ) as conversations
    </select>
    <select id="selectLetters" resultType="Message">
        select <include refid="selectColumns"></include> from message
        where from_id != 1
        and status != 2
        and conversation_id = #{conversationId}
        order by create_time desc
        limit #{offset}, #{limit}
    </select>
    <select id="selectLetterRows" resultType="int">
        select count(1) from message
        where status != 2
        and conversation_id = #{conversationId}
    </select>
    <select id="selectLetterUnReadCount" resultType="int">
        select count(1) from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId != null">and conversation_id = #{conversationId}</if>
    </select>
    <select id="selectNoticeList" resultType="Message">
        select <include refid="selectColumns"></include> from message
        where id in (
            select max(id) from message
            where from_id = 1
            and status != 2
            and to_id = #{userId}
            group by conversation_id
        )
    </select>
    <select id="selectNotices" resultType="Message">
        select <include refid="selectColumns"></include> from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{conversationId}
        order by create_time desc
        limit #{offset}, #{limit}
    </select>
    <select id="selectNoticeRows" resultType="int">
        select count(1) from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{conversationId}
    </select>
    <select id="selectNoticeUnReadCount" resultType="int">
        select count(1) from message
        where status = 0
        and from_id = 1
        and to_id = #{userId}
        <if test="conversationId != null">and conversation_id = #{conversationId}</if>
    </select>
    <insert id="insertMessage" keyProperty="id">
        insert into message(<include refid="insertColumns"></include>)
        values(#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>
    <update id="updateConversationStatus">
        update message set status = #{status}
        where to_id = #{userId}
        and conversation_id = #{conversationId}
    </update>
</mapper>